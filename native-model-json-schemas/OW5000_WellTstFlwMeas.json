{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "#/definitions/OW5000_WellTstFlwMeas",
  "title": "OW5000.WellTstFlwMeas",
  "type": "object",
  "properties": {
    "wellid": {
      "type": "string",
      "maxLength": 31,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "test_type": {
      "type": "string",
      "maxLength": 12,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "run_number": {
      "type": "string",
      "maxLength": 4,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "test_number": {
      "type": "string",
      "maxLength": 4,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "measurement_obs_no": {
      "type": "integer",
      "sqlType": "DBAPITYPEOBJECT('BOOLEAN', 'BIGINT', 'BIT', 'INTEGER', 'SMALLINT', 'TINYINT')"
    },
    "period_type": {
      "type": "string",
      "maxLength": 12,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "period_obs_no": {
      "type": "integer",
      "sqlType": "DBAPITYPEOBJECT('BOOLEAN', 'BIGINT', 'BIT', 'INTEGER', 'SMALLINT', 'TINYINT')"
    },
    "fluid_type": {
      "type": "string",
      "maxLength": 12,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "measurement_vol": {
      "type": "number",
      "format": "float",
      "multipleOf": 0.001,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "measurement_vol_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "measurement_press": {
      "type": "number",
      "format": "float",
      "multipleOf": 0.001,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "measurement_press_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "measurement_time": {
      "type": "number",
      "format": "float",
      "multipleOf": 0.001,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "measurement_time_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "surface_choke_diam": {
      "type": "number",
      "format": "float",
      "multipleOf": 0.001,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "surface_choke_diam_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "remark": {
      "type": "string",
      "maxLength": 2000,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "create_date": {
      "type": "string",
      "format": "time",
      "maxLength": 29,
      "sqlType": "DBAPITYPEOBJECT('TIMESTAMP')"
    },
    "create_user_id": {
      "type": "string",
      "maxLength": 32,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "update_date": {
      "type": "string",
      "format": "time",
      "maxLength": 29,
      "sqlType": "DBAPITYPEOBJECT('TIMESTAMP')"
    },
    "update_user_id": {
      "type": "string",
      "maxLength": 32,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "row_lock_ind": {
      "type": "string",
      "maxLength": 1,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "data_source": {
      "type": "string",
      "maxLength": 5,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "native_uid": {
      "type": "string",
      "maxLength": 4000,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    }
  },
  "required": [
    "wellid",
    "test_type",
    "run_number",
    "test_number",
    "measurement_obs_no"
  ]
}