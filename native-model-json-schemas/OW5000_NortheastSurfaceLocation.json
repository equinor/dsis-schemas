{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "#/definitions/OW5000_NortheastSurfaceLocation",
  "title": "OW5000.NortheastSurfaceLocation",
  "type": "object",
  "properties": {
    "well_location_id": {
      "type": "string",
      "maxLength": 12,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "district": {
      "type": "string",
      "maxLength": 16,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "lot_code": {
      "type": "string",
      "maxLength": 12,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "map_quad_name": {
      "type": "string",
      "maxLength": 30,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "map_quad_sec": {
      "type": "string",
      "maxLength": 2,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "map_quad_min": {
      "type": "number",
      "format": "float",
      "multipleOf": 0.001,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "twp_name": {
      "type": "string",
      "maxLength": 30,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "meas_ref": {
      "type": "string",
      "maxLength": 12,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "ew_ftg": {
      "type": "number",
      "format": "float",
      "multipleOf": 0.01,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "ew_ftg_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "ns_ftg": {
      "type": "number",
      "format": "float",
      "multipleOf": 0.01,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "ns_ftg_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "ref_latitude": {
      "type": "number",
      "format": "float",
      "multipleOf": 1e-09,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "ref_latitude_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "ref_longitude": {
      "type": "number",
      "format": "float",
      "multipleOf": 1e-09,
      "sqlType": "DBAPITYPEOBJECT('FLOAT', 'REAL', 'DOUBLE')"
    },
    "ref_longitude_dsdsunit": {
      "type": "string",
      "maxLength": 64,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "remark": {
      "type": "string",
      "maxLength": 2000,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "data_source": {
      "type": "string",
      "maxLength": 5,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "create_date": {
      "type": "string",
      "format": "time",
      "maxLength": 29,
      "sqlType": "DBAPITYPEOBJECT('TIMESTAMP')"
    },
    "create_user_id": {
      "type": "string",
      "maxLength": 32,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "update_date": {
      "type": "string",
      "format": "time",
      "maxLength": 29,
      "sqlType": "DBAPITYPEOBJECT('TIMESTAMP')"
    },
    "update_user_id": {
      "type": "string",
      "maxLength": 32,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "row_lock_ind": {
      "type": "string",
      "maxLength": 1,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    },
    "native_uid": {
      "type": "string",
      "maxLength": 4000,
      "sqlType": "DBAPITYPEOBJECT('CHAR', 'NCHAR', 'NVARCHAR', 'VARCHAR', 'OTHER')"
    }
  },
  "required": [
    "well_location_id"
  ]
}